# -*- coding: utf-8 -*-
"""matplotlib.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1CR7ll6x2UQtJGBwBEjZhvkFNLJJg8rwV
"""

import matplotlib.pyplot as plt

#style 적용하기
plt.style.use('classic')

import numpy as np

# Sample Data 생성
x = np.linspace(0, 10, 100) #0에서 10사이에 100개의 데이터를 만들어라
x

plt.plot(x, np.sin(x))

plt.plot(x, np.cos(x))

#두개 같이하면 둘다 출력
plt.plot(x, np.sin(x))
plt.plot(x, np.cos(x))

fig = plt.figure()
plt.plot(x, np.sin(x), '-') #실선
plt.plot(x, np.cos(x), '--') #점선
fig.savefig('my_figure.png')

fig.canvas.get_supported_filetypes()

plt.subplot(2,1,1)
plt.plot(x,np.sin(x))
plt.subplot(2,1,2)
plt.plot(x,np.cos(x))

plt.subplot(2,2,1)
plt.plot(x,np.sin(x))
plt.subplot(2,2,2)
plt.plot(x,np.cos(x))
plt.subplot(2,2,3)
plt.plot(x,np.sin(x))
plt.subplot(2,2,4)
plt.plot(x,np.cos(x))

plt.style.use('seaborn-whitegrid')

fig = plt.figure()
ax = plt.axes()

x = np.linspace(0,10,100)
ax.plot(x,np.sin(x))

plt.plot(x,np.sin(x-0),color = 'blue')        #색상의 이름으로 지정
plt.plot(x,np.sin(x-1),color = 'g')           #색상의 약자. RGB(화면), CMYK(인쇄)
plt.plot(x,np.sin(x-2),color = '0.75')        #0-1사이에 회색조를 표현
plt.plot(x,np.sin(x-3),color = '#ffa8b2')     #16진수로 표현한 RGB
plt.plot(x,np.sin(x-4),color = (1.0,0.2,0.3)) #RGB값을 튜플로 표현
plt.plot(x,np.sin(x-5),color = 'chartreuse')  #고유 컬러 이름

plt.plot(x,x+0, linestyle='solid')    #실선
plt.plot(x,x+1, linestyle='dashed')   #점선
plt.plot(x,x+2, linestyle='dashdot')  #선+점
plt.plot(x,x+3, linestyle='dotted')   #점

plt.plot(x,x+4, linestyle='-')        #실선   
plt.plot(x,x+5, linestyle='--')       #점선
plt.plot(x,x+6, linestyle='-.')       #점+선
plt.plot(x,x+7, linestyle=':')        #점

#선 스타일과 색상 같이 지정
plt.plot(x, x+0, '-g')
plt.plot(x, x+1, '--c')
plt.plot(x, x+2, '-.k')
plt.plot(x, x+3, ':r')

#플롯 조정하기 : 축 경계 조정
plt.plot(x, np.sin(x))  #기본값 : 가로 세로를 꽉채움

plt.xlim(-1, 11)    #xlim: x축의 리미트 설정
plt.ylim(-1.5, 1.5) #ylim: y축의 리미트 설정

#축 뒤집기
plt.plot(x, np.sin(x))
plt.xlim(10,0)      #앞이 더 크면 축이 뒤집어짐
plt.ylim(1.2,-1.2)  #앞에 더 크면 축이 뒤집어짐

plt.plot(x, np.sin(x))
plt.axis([-1,11,-1.5,1.5]) #axis를 사용하여 리미트조절

plt.plot(x, np.sin(x))
plt.axis('tight')   #텍스트로 변환, 'tight'는 꽉채우기

plt.plot(x,np.sin(x))
plt.axis('equal') #x축과 y축의 단위를 똑같이 만든다.

#플롯에 레이블 붙이기(설명)
plt.plot(x,np.sin(x))
plt.title('A Sine Curve')
plt.xlabel('x')
plt.ylabel('sin(x)')

plt.plot(x, np.sin(x), '-g', label = 'sin(x)')   #선의 이름 라벨링
plt.plot(x, np.cos(x), ':b', label = 'cos(x)')
plt.axis('equal')
plt.legend()                                     #범례

# 산점도의 출력 : 산점도(점으로 출력)
x = np.linspace(0,10,30)
y = np.sin(x)

plt.plot(x,y,'o', color = 'k')  #'o' 산점도 마커

rng = np.random.RandomState(0)
for marker in ['o',',','x','+','v','<','>','s','d']:
  plt.plot(rng.rand(5),rng.rand(5), marker, label = 'marker = {0}'.format(marker))
  plt.legend()
  plt.xlim(0,1.8)

plt.plot(x,y,'-ok') #실선, o산점도, 검은색

plt.plot(x,y, '-p', color = 'gray', markersize = 15, linewidth = 5,
         markerfacecolor = 'blue', markeredgecolor = 'yellow',
         markeredgewidth = '2') #p는 폴리곤(5각형)

plt.scatter(x,y,marker = 'o', s=150) #scatter를 통해 인구수에 따른 크기설정을 할 수있다.

rng = np.random.RandomState(0)
x = rng.randn(100)
y = rng.randn(100)
color = rng.randn(100)
size = 1000 * rng.randn(100)
plt.scatter(x,y,s=size, alpha=0.3, c=color, cmap = 'jet')
plt.colorbar()

from sklearn.datasets import load_iris #sckit-learn
iris = load_iris()
type(iris)

features = iris.data.T

plt.scatter(features[0],features[1], s=100*features[3],c=iris.target, cmap='viridis',alpha=0.3)
plt.xlabel(iris.feature_names[0])
plt.ylabel(iris.feature_names[1])
plt.colorbar()

#오차 시각화
x = np.linspace(0,10,50)
dy = 0.8
y = np.sin(x) + dy*np.random.randn(50)

plt.errorbar(x,y,yerr=dy, fmt='.k')

plt.errorbar(x,y,yerr=dy,fmt='o',c='k', ecolor = 'lightgray', elinewidth = 3, capsize=0)

